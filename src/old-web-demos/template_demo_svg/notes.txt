		<!--<svg cursor="pointer" width="350"  x="0" data-bind="attr: { id: SVG_ID, y: SVG_Container_Top, height: SVG_Container_Height}" >-->
			<!--<rect x="0" y="0" width="400" height="25" stroke="none" fill="rgba(255,0,0,0.1)" ></rect>-->
			<!--<g transform="translate(10,10)" data-bind="attr: { id: G_ID }, event: { mouseover: StatusBar_Open, mouseout: StatusBar_Closed }, mouseBubble:true" shape-rendering="crispEdges">-->

				<!-- BACKGROUND SHADOW -->
				<!--<rect id="background_shadow_panel" height="0" width="0" cursor="pointer"
					  stroke-width="1" stroke="rgba(0,0,0,1)" fill="rgba(0,128,0,1)"
					  data-bind="attr: { x: BG_ShadowLeft, y: BG_ShadowTop,
					  width: BG_ShadowWidth, height: BG_ShadowHeight,
					  filter: BG_ShadowFilter }, mouseBubble:false"></rect>-->

				<!-- STATUS BAR -->
				<!--<g shape-rendering="geometricPrecision" transform="translate(0,0)">
					<rect x="1" y="0"width="250" height="0" stroke-width="0" data-bind="attr: {fill: StatusFillColor, height: StatusBar_Height, y: StatusBar_Top }, mouseBubble:false"></rect>
					<g data-bind="visible: ChevronGroup_Displayed, attr: { stroke: CheveronStrokeColor }" fill="none" stroke-width="2">
						<polyline data-bind="visible: CheveronDownDisplayed" points="10,14 18,7 26,14" />
						<polyline data-bind="visible: ChevronUpDisplayed" points="10,7 18,14 26,7" />
						<rect x="0" y="0" width="50" height="20" fill="rgba(0,0,255,0.0)" stroke-width="0" data-bind="event: { click: ListPanel_Display }, clickBubble: false"></rect>
					</g>
					<g data-bind="visible: EllipsisGroup_Displayed, attr: { fill: EllipsisFillColor }">
						<circle cx="224" cy="11" r="2" />
						<circle cx="232" cy="11" r="2" />
						<circle cx="240" cy="11" r="2" />
						<rect x="200" y="0" width="50" height="20" fill="rgba(255,0,0,0)" stroke-width="1" data-bind="event: { click: EllipsisFlyout_Display }, clickBubble: false"></rect>
					</g>
				</g>-->

				<!-- HEADER -->
				<!--<g id="Header_Text_Panels" shape-rendering="geometricPrecision">
					<rect x="1" y="0" width="250" height="0" stroke-width="0" fill="rgba(255,255,255,1)"
						  data-bind="attr: { y: HeaderPanel_Top, height: HeaderPanel_Height  } , mouseBubble:false"></rect>
					<image xlink:href="" x="10" y="30" height="32px" width="32px" data-bind="attr: { 'xlink:href': HeaderIcon_Icon }" />
					<g data-bind="visible: StatusInfo_Displayed">
						<image xlink:href="svg/status_info.svg" x="28" y="44" height="24px" width="24px" />
					</g>
					<g data-bind="visible: StatusCrit_Displayed">
						<image xlink:href="svg/status_crit.svg" x="28" y="44" height="22px" width="22px" />
					</g>
					<g id="Header_Text">
						<text x="50" y="44" fill="black" font-family="Segoe UI" data-bind="text: Name"></text>
						<text x="50" y="60" fill="black" font-size="12px" font-family="Segoe UI" data-bind="text: ListProcessInfo"></text>
					</g>
					<g data-bind="visible: HeaderIconPanel_Displayed, template: { foreach: ListProcess_HeaderIconsList, name: 'ko-SVG-HeaderPanel-LP_HeaderIconsList-Template'}"></g>
				</g>-->

				<!-- LIST ITEMS -->
				<!--<svg id="ListPanel" x="0" y="10" data-bind="visible: ListPanelOpen, attr: { y : ListPanelRect_Top, height: ListPanelRect_Height }">
					<rect id="ListPanelRect" fill="rgba(255,255,255,1)" stroke-width="0" x="1" y="0" width="250" height="0" data-bind="attr: { height: ListPanelRect_Height }"></rect>
					<g data-bind="template: { foreach: ListProcesses, name: 'ko-SVG-ListProcessChildren-Template'}"></g>
				</svg>-->

				<!-- FOOTER NOTIFICATIONS ICONS-->
				<!--<svg id="FooterPanel" x="0" data-bind="visible: NoteGroupedDisplayed, attr: { y: NoteGroup_Top, height: NoteGroup_Height }, mouseBubble:false">
					<rect x="1" y="0" height="32" width="250" stroke-width="0" fill="rgba(255,255,255,1)"></rect>
					<g shape-rendering="crispEdges" data-bind="template: { foreach: NotificationGroups, name: 'ko-SVG-NotificationGroups-Template'}"></g>
				</svg>-->

				<!-- ELLIPSIS_FLYOUT - move to <use> or create a seperate KO template -->
				<!--<g transform="translate(220,20)" data-bind="visible: IsEllipsisFlyoutDisplayed, event: {click: EllipsisFlyout_Handler}" cursor="pointer" >
					<rect x="0" y="0" width="110" height="51" fill="#FFFFFF" stroke-width="1" stroke="rgba(0,0,0,1)"></rect>
					<text x="10" y="20" style="fill: #000000; stroke: none; font-size: 12px;">Load Server Map</text>
					<text x="10" y="42" style="fill: #000000; stroke: none; font-size: 12px;">Show Self-Links</text>
				</g>-->

			<!--</g>
		</svg>-->




                      <!--<animateTransform attributeType="xml" attributeName="transform" type="translate" from="0" to="360" begin="0" dur="1000ms"/>-->
                      <!--<animateTransform attributeType="xml" attributeName="transform" type="translate" from="360" to="0" begin="1000ms" dur="1000ms" end="100" />
                      <animateTransform attributeType="xml" attributeName="transform" type="scale" from="1" to="2" begin="2000ms" dur="1000ms" />-->


                <!--<rect fill="#FE9FFF" width="100px" height="100px"><animateTransform attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="5s" repeatDur="indefinite"/></rect>-->